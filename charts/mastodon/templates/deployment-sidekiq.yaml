apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mastodon.fullname" . }}-sidekiq
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "mastodon.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: sidekiq
      app.kubernetes.io/part-of: rails
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        # roll the pods to pick up any db migrations
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        {{- include "mastodon.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: sidekiq
        app.kubernetes.io/part-of: rails
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mastodon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if (not .Values.s3.enabled) }}
      # ensure we run on the same node as the other rails components; only
      # required when using PVCs that are ReadWriteOnce
      {{- if or (eq "ReadWriteOnce" .Values.mastodon.persistence.assets.accessMode) (eq "ReadWriteOnce" .Values.mastodon.persistence.system.accessMode) }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                    - rails
            topologyKey: kubernetes.io/hostname
      {{- end }}
      volumes:
        - name: assets
          persistentVolumeClaim:
            claimName: {{ template "mastodon.fullname" . }}-assets
        - name: system
          persistentVolumeClaim:
            claimName: {{ template "mastodon.fullname" . }}-system
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bundle
            - exec
            - sidekiq
            - -c
            - {{ .Values.mastodon.sidekiq.concurrency | quote }}
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-config
            - secretRef:
                name: {{ .Values.mastodon.secrets.secretName }}
            - secretRef:
                name: {{ .Values.postgres.credentials.secretName }}
            - secretRef:
                name: {{ .Values.redis.secretName }}
            - secretRef:
                name: {{ .Values.smtp.credentials.secretName }}
          {{- if .Values.s3.enabled }}
            - secretRef:
                name: {{ .Values.s3.credentials.secretName }}
          {{- end }}
          {{- if .Values.elasticsearch.credentials.enabled }}
            - secretRef:
                name: {{ .Values.elasticsearch.credentials.secretName }}
          {{- end }}
          {{- if (not .Values.s3.enabled) }}
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
          {{- end }}
          resources:
            {{- toYaml .Values.mastodon.sidekiq.resources | nindent 12 }}
      {{- with .Values.mastodon.sidekiq.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
