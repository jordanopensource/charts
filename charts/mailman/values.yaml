# Default values for mailman.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

# Postgres database
postgres:
  enabled: false

# Global
global:
  adminEmail: ""

# Mailman Core
core:
  service:
    type: ClusterIP
    ports:
      api: 8001
      postfixExtender: 5000

  replicaCount: 1

  image:
    repository: maxking/mailman-core
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  persistence:
    enabled: false
    annotations: {}
    accessModes: 
      - ReadWriteOnce
    size: 1Gi
    storageClass: ""

  secretNamesForEnv: []
  env:
    DATABASE_TYPE: postgres
    DATABASE_CLASS: "mailman.database.postgresql.PostgreSQLDatabase"

  postfixExtender:
    image:
      repository: danilsmirnov/mailman-postfix-extender
      pullPolicy: IfNotPresent
      tag: latest
    securityContext: {}
    resources: {}

    secretNamesForEnv: []
    env:
      FILES: "/opt/mailman/var/data/postfix_domains,/opt/mailman/var/data/postfix_lmtp"

      
# Mailman Web
web:
  withHyperkitty: true

  image:
    repository: maxking/mailman-web
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  postorius:
    image:
      repository: maxking/postorius
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""

  service:
    type: ClusterIP
    ports:
      api: 8000
      http: 80

  ingress:
    enabled: true
    className: ""
    annotations: {}
    hosts:
      - host: mailmanweb.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

  replicaCount: 1
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  persistence:
    enabled: false
    annotations: {}
    accessModes: 
      - ReadWriteOnce
    size: 1Gi
    storageClass: ""

  secretNamesForEnv: []
  env: {}

  nginx:
    image:
      repository: nginx
      pullPolicy: IfNotPresent
      tag: latest
    securityContext: {}
    resources: {}
    secretNamesForEnv: []
    env: {}
