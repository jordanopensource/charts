apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mailman.postfix.fullname" . }}
  labels:
    {{- include "mailman.labels" . | nindent 4 }}
spec:
  {{- if not .Values.postfix.autoscaling.enabled }}
  replicas: {{ .Values.postfix.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mailman.postfix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.postfix.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mailman.postfix.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mailman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.postfix.podSecurityContext | nindent 8 }}
    {{- if or .Values.postfix.dkimSecret .Values.postfix.certSecret }}
      initContainers:
      {{- if .Values.postfix.dkimSecret }}
        - name: copy-domainkeys
          command: ['sh', '-c', 'cp /tmp/domainkeys-secret/*.private /tmp/domainkeys/']
          image: busybox
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: domainkeys
              mountPath: /tmp/domainkeys
            - name: domainkeys-secret
              mountPath: /tmp/domainkeys-secret
      {{- end }}
      {{- if .Values.postfix.certSecret }}
        - name: copy-certs
          command: ['sh', '-c', 'cp /tmp/certs-secret/*.crt /tmp/certs-secret/*.key /tmp/certs/']
          image: busybox
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: certs
              mountPath: /tmp/certs
            - name: certs-secret
              mountPath: /tmp/certs-secret
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-postfix
          securityContext:
            {{- toYaml .Values.postfix.securityContext | nindent 12 }}
          image: "{{ .Values.postfix.image.repository }}:{{ .Values.postfix.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postfix.image.pullPolicy }}
          volumeMounts:
            - name: postfix-config
              mountPath: /configure.sh
              subPath: configure.sh
            - name: postfix
              mountPath: /var/spool/postfix
          {{- if .Values.postfix.dkimSecret }}
            - name: domainkeys
              mountPath: /etc/opendkim/domainkeys
          {{- end }}
          {{- if .Values.postfix.certSecret }}
            - name: certs
              mountPath: /etc/postfix/certs
          {{- end }}
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
          {{- if .Values.postfix.certSecret }}
            - name: tls
              containerPort: 587
              protocol: TCP
          {{- end }}
        {{- if .Values.postfix.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: {{ .Values.postfix.livenessProbe.initialDelaySeconds }}
            successThreshold: {{ .Values.postfix.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.postfix.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.postfix.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.postfix.livenessProbe.periodSeconds }}
        {{- end }}
        {{- if .Values.postfix.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: {{ .Values.postfix.readinessProbe.initialDelaySeconds }}
            successThreshold: {{ .Values.postfix.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.postfix.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.postfix.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.postfix.readinessProbe.periodSeconds }}
        {{- end }}
          resources:
            {{- toYaml .Values.postfix.resources | nindent 12 }}
          env:
            {{- include "mailman.postfix.env" . | nindent 12 }}
        {{- if or .Values.postfix.extraEnv .Values.postfix.secretNamesForExtraEnv }}
          envFrom:
          {{- if .Values.postfix.extraEnv }}
            - configMapRef:
                name: {{ include "mailman.postfix.fullname" . }}-extra-env
          {{- end }}
          {{- range .Values.postfix.secretNamesForExtraEnv }}
            - secretRef:
                name: {{ . }}
          {{- end }}
        {{- end }}
      {{- with .Values.postfix.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postfix.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postfix.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: postfix-config
          configMap:
            name: {{ include "mailman.postfix.fullname" . }}
        - name: postfix
          {{- if .Values.postfix.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.postfix.persistence.existingClaim }}{{ .Values.postfix.persistence.existingClaim }}{{- else }}{{ include "mailman.postfix.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- if .Values.postfix.dkimSecret }}
        - name: domainkeys
          emptyDir: {}
        - name: domainkeys-secret
          secret:
            secretName: {{ .Values.postfix.dkimSecret }}
      {{- end }}
      {{- if .Values.postfix.certSecret }}
        - name: certs
          emptyDir: {}
        - name: certs-secret
          secret:
            secretName: {{ .Values.postfix.certSecret }}
      {{- end }}