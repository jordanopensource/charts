# Default values for wazuh.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  indexerUrl: "https://wazuh-indexer:9200"
  wazuhApiUrl: "https://wazuh-master"

tls:
  # If enabled you either need to provide a secrete name containing specific keys as certs or enable the creation of certifications if
  # your cluster supports issuing certificates.
  enabled: true
  # **REQUIRED** when you want to provide your own certificate
  # The Secret name for the certs must have the following keys within it
  # admin-key.pem, admin.pem, dashboard-key.pem, dashboard.pem
  # filebeat-key.pem, filebeat.pem, node-key.pem, node.pem, root-ca.pem,
  # key.pem, cert.pem
  secretName: ""
  certManager:
    enabled: true
    duration: 2160h # 90d
    renewBefore: 360h # 15d
    issuer:
      name: "selfsigned-josa"
      # We can reference ClusterIssuers by changing the kind here.
      # The default value is Issuer (i.e. a locally namespaced Issuer)
      kind: "ClusterIssuer"
    # The use of the common name field has been deprecated since 2000 and is
    # discouraged from being used.
    commonName: test.josa.dev
    # At least one of commonName (possibly through literalSubject), dnsNames, uris, emailAddresses, ipAddresses or otherNames is required.
    dnsNames:
      - test.josa.dev
      - www.test.josa.dev
    ## CA certificate secret name that can be downloaded from https://letsencrypt.org/certificates/, the key name should be ca.crt in the secret file.
    caCrtSecretName: "letsencrypt-ca"

indexer:
  image:
    repository: wazuh/wazuh-indexer
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.7.4"

  config:
    sslEnabled: false
    # The name of the configmap that includes the custom indexer config
    # Must have the following key "opensearch.yml"
    indexerCustomConfig: ""
    # Custom indexer internal_users.yml file secretname
    # usernames and passwords hashes are in this file
    # Must have the key "internal_users.yml"
    # Please read https://documentation.wazuh.com/current/deployment-options/docker/wazuh-container.html#change-the-password-of-wazuh-users
    indexerInternalUsersSecretName: ""

  imagePullSecrets: []

  replicaCount: 1

  podAnnotations: {}

  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    capabilities:
      add: ["SYS_CHROOT"]
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  # Additional volumes on the output StatefulSet definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output StatefulSet definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    storageClassName: ""
    size: "1Gi"
    existingClaim: ""

manager:
  image:
    repository: wazuh/wazuh-manager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.7.4"

  imagePullSecrets: []

  config:
    # possible values 'full' and 'none'
    filebeatSSLVerificationMode: "none"
    # The name of the configmap that includes the custom manager configurations
    # Must have following keys
    # 'master.conf', 'worker.conf'
    customManagerConfig: ""

    secrets:
      # If you provide an existing secret name those values will be ignored
      # -------------------
      #
      # WARN: Those are the default indexer credentials for the wazuh-ui 'dashboard',
      # do not change unless you changed the passwords and the usernames
      # using the indexerInternalUsersSecretName in the indexer section
      indexerUsername: "admin"
      indexerPassword: "SecretPassword"
      # -------------------
      wazuhApiUsername: "wazuh"
      # Note The password for Wazuh API users must be between 8 and 64 characters long.
      # It must contain at least one uppercase and one lowercase letter, a number, and a symbol.
      wazuhApiPassword: "Pho8OH1voo6eew@ahVui4Ahghu6leith"
      wazuhClusterKey: "123a45bc67def891gh23i45jk67l8mn9"
      wazuhAuthDPass: "password"
      # The secret must have the following keys
      # INDEXER_USERNAME, INDEXER_PASSWORD
      # API_USERNAME, API_PASSWORD
      # WAZUH_CLUSTER_KEY
      # authd.pass
      existingSecretName: ""

  master:
    service:
      type: ClusterIP
      annotations: {}

    podSecurityContext:
      fsGroup: 101
      # fsGroup: 2000

    podAnnotations: {}

    podLabels: {}

    securityContext:
      capabilities:
        add: ["SYS_CHROOT"]
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    # Additional volumes on the output deployment definition.
    volumes: []
    # - name: foo
    #   secret:
    #     secretName: mysecret
    #     optional: false

    # Additional volumeMounts on the output deployment definition.
    volumeMounts: []
    # - name: foo
    #   mountPath: "/etc/foo"
    #   readOnly: true

    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

    storage:
      storageClassName: ""
      size: "1Gi"
      existingClaim: ""

  workers:
    replicaCount: 1

    service:
      type: ClusterIP
      annotations: {}

    podSecurityContext:
      fsGroup: 101
      # fsGroup: 2000

    podAnnotations: {}

    podLabels: {}

    securityContext:
      capabilities:
        add: ["SYS_CHROOT"]
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    # Additional volumes on the output deployment definition.
    volumes: []
    # - name: foo
    #   secret:
    #     secretName: mysecret
    #     optional: false

    # Additional volumeMounts on the output deployment definition.
    volumeMounts: []
    # - name: foo
    #   mountPath: "/etc/foo"
    #   readOnly: true

    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

    storage:
      storageClassName: ""
      size: "1Gi"
      existingClaim: ""

dashboard:
  replicaCount: 1

  image:
    repository: wazuh/wazuh-dashboard
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.7.4"

  config:
    ServerSSL: false
    # ----------------
    # The configmap name that includes the dashboard custom config file
    # Must have the key 'opensearch_dashboards.yml'
    dashboardCustomConfig: ""

    secrets:
      # If you provide an existing secret name those values will be ignored
      # -------------------
      # WARN: Those are the default indexer dashboard credentials,
      # do not change unless you changed the passwords and the usernames
      # using the indexerInternalUsersSecretName in the indexer section
      dashboardUsername: "kibanaserver"
      dashboardPassword: "kibanaserver"
      # -------------------
      # The secret must have the following keys
      # DASHBOARD_USERNAME, DASHBOARD_PASSWORD
      existingSecretName: ""

  imagePullSecrets: []

  podAnnotations: {}

  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  # Additional volumes on the output deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    httpGet:
      path: /
      port: dashboard
  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    httpGet:
      path: /
      port: dashboard

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 5601

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
