apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uptime-kuma.fullname" . }}
  labels:
    {{- include "uptime-kuma.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "uptime-kuma.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "uptime-kuma.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "uptime-kuma.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          {{- if .Values.env }}
            - configMapRef:
                name: {{ include "uptime-kuma.fullname" . }}-config
          {{- end }}
          {{- range .Values.secretNamesForEnv }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - node
                - extra/healthcheck.js
          readinessProbe:
            httpGet:
              path: /
              port: http
          startupProbe:
            exec:
              command:
                - node
                - extra/healthcheck.js
            failureThreshold: 40
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /app/data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "uptime-kuma.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}